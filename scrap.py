# Generated by Selenium IDE
import pytest
import time
import json
from seleniumwire import webdriver
from seleniumwire.utils import decode
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.support import expected_conditions as EC
import db
import days
import os

import requests
from seleniumwire.utils import decode

options = FirefoxOptions()
options.add_argument("--headless")
dietly_mail = os.environ['dietly_mail']
dietly_pass = os.environ['dietly_pass']

driver = webdriver.Firefox(options=options)
vars = {}
driver.get("https://dietly.pl/profil-dietly")
driver.set_window_size(1888, 2093)
driver.find_element(By.ID, "email").send_keys(dietly_mail)
driver.find_element(By.ID, "password").send_keys(dietly_pass)
driver.find_element(By.CSS_SELECTOR, ".spacer-top-16").click()

done=[]

days = days.month()
for day in days:

  elem = WebDriverWait(driver, 30).until(
  EC.presence_of_element_located((By.ID, day))
  )

  driver.find_element(By.ID, day).click()
  for request in driver.requests:
    if "delivery" in request.url:
      deliveryUrl=request.url
      deliveryHeaders=request.headers

  try:
    if deliveryUrl not in done:
      r=requests.get(deliveryUrl, headers=deliveryHeaders)
      done.append(deliveryUrl)

      if str(r.status_code)=="200":
        response = r.json()
        for meal in response["deliveryMenuMeal"]:
          if meal["menuMealName"] is not None:
            ingredients=[]
            for i in meal["ingredients"]:
              ingredients.append(i["name"])

            if not db.isEntry(date=day, mealName=meal["mealName"]):
              db.insert(
                date=day,
                mealName=meal["mealName"], 
                menuMealName=meal["menuMealName"], 
                weight=meal["nutrition"]["weight"],
                calories=meal["nutrition"]["calories"], 
                fat=meal["nutrition"]["fat"], 
                protein=meal["nutrition"]["protein"], 
                carbohydrate=meal["nutrition"]["carbohydrate"], 
                dietaryFiber=meal["nutrition"]["dietaryFiber"], 
                sugar=meal["nutrition"]["sugar"], 
                salt=meal["nutrition"]["salt"], 
                saturatedFattyAcids=meal["nutrition"]["saturatedFattyAcids"],
                ingredients=str(ingredients)
              )
              print(day+" "+meal["mealName"]+" inserted")
            else:
              print(day+" "+meal["mealName"]+" already exists")
          else:
            print(day+" not ready yet")
  except NameError:
    pass
driver.quit()